#!/bin/bash

colorize () {
  if [[ $1 == green ]]; then
    echo "$(tput setaf 2)$2$(tput sgr0)"
  elif [[ $1 == red ]]; then
    echo "$(tput setaf 1)$2$(tput sgr0)"
  elif [[ $1 == yellow ]]; then
    echo "$(tput setaf 3)$2$(tput sgr0)"
  fi
}

spell_available() {
  command -v ispell
}

spell_check() {
  if [[ ! $message =~ $merge_or_revert && $(spell_available) ]]; then
    echo "$1" | ispell -l | grep -v "refactor\|doc"
  fi

  echo ""
}

optional_tag="((feature|feat|fix|doc|style|refactor|test|chore): )?"
capital_letter="[A-Z]"
merge_or_revert="(Merge|Revert).*"
anything_not_empty=".+"
not_full_stop="[^.]"
positive_pattern="^(${optional_tag}${capital_letter}${anything_not_empty}|${merge_or_revert})${not_full_stop}$"

message=$(head -n1 "$1")
size=${#message}
size_limit=72
spelling_available=$(spell_available)
spelling_errors=$(spell_check "$message")

if [[ ! $message =~ $positive_pattern || $size -gt $size_limit || $spelling_errors ]]; then
  colorize yellow "[POLICY] Your message is not correct"
  echo
  echo "Check the CONTRIBUTING information."
  echo
  colorize yellow "[CHECKS]"
  echo -n "- size: "
  if [[ $size -gt $size_limit ]]; then
    colorize red "[FAIL]"
    echo
    echo "Your message has ${size} chars and the limit is ${size_limit} chars."
    echo
    echo "Additionally, it is possible to include a longer description of the"
    echo "problem/solution by opening the the editor (commit without -m or use -e)"
    echo
  else
    colorize green "[PASS]"
  fi

  echo -n "- format: "
  if [[ ! $message =~ $positive_pattern ]]; then
    colorize red "[FAIL]"
    echo
    echo "The format is as follows: (optional)?";
    echo "({type}: )?Capitalized, short summary of changes (72 chars tops, no period at the end)"
    echo
    echo "The types are the following:"
    echo "- feature|feat: Change behavior, interface or adds new functionality"
    echo "- fix: Fix bugs"
    echo "- doc: Change to documentation, README, CHANGELOG etc"
    echo "- style: Format, missing semi-colons, changes in whitespace, coding style in general"
    echo "- refactor: Refactor production code, no functionality or behavior change"
    echo "- test: Add missing tests, improve test organization and description; no production code change"
    echo "- chore: Update gems; no direct production code change"
    echo
    echo "Examples:"
    echo "feature: Add user search by email"
    echo "chore: Update Rails to 5.1"
    echo
  else
    colorize green "[PASS]"
  fi

  echo -n "- spelling: "
  if [[ $spelling_available ]]; then
    if [[ $spelling_errors ]]; then
      colorize red "[FAIL]"
      echo
      echo "Your message has the following spelling errors:"
      echo "$spelling_errors"
      echo
    else
      colorize green "[PASS]"
    fi
  else
    colorize yellow "[NOT AVAILABLE]"
    echo
    echo "Install ispell to enable spelling validation:"
    echo "brew install ispell"
    echo
  fi

  exit 1
else
  exit 0
fi
